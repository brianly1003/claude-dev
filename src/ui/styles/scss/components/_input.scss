// ============================================
// Input Components
// ============================================

@use "../abstracts/variables" as *;
@use "../abstracts/mixins" as *;

.input-container {
  padding: 12px;
  background: var(--vscode-panel-background);
  border-top: 1px solid $border-primary;
  box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.1);
  min-height: 80px;
  position: relative;
  display: flex;
  flex-direction: column;
  gap: $spacing-sm;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(
      90deg,
      transparent,
      $brand-primary,
      transparent
    );
    opacity: 0.3;
  }

  @include respond-to("xs") {
    padding: $spacing-sm;
    min-height: 76px;
    gap: $spacing-xs;
  }
}

// Token Counter at Top
.token-counter-top {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: $spacing-xs;
}

.token-display-large {
  @include flex-center(row, $spacing-xs);
  @include glass-effect(0.08);
  border-radius: $radius-sm;
  padding: $spacing-xs $spacing-md;
  font-size: 13px;
  color: rgba(255, 255, 255, 0.9);
  font-weight: $font-weight-medium;
  transition: all $transition-normal $easing-default;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);

  &:hover {
    background: rgba(255, 255, 255, 0.12);
    border-color: rgba(255, 255, 255, 0.2);
    transform: scale(1.02);
  }

  &.warning {
    background: rgba(245, 158, 11, 0.1);
    border-color: rgba(245, 158, 11, 0.3);
    color: $state-warning;
  }

  &.error {
    background: rgba(239, 68, 68, 0.1);
    border-color: rgba(239, 68, 68, 0.3);
    color: $state-error;
    animation: errorPulse 2s infinite;
  }

  @include respond-to("xs") {
    font-size: 11px;
    padding: $spacing-xs $spacing-sm;
  }
}

.token-label {
  font-size: $font-size-sm;
  color: rgba(255, 255, 255, 0.7);
  font-weight: $font-weight-medium;
}

.token-separator {
  color: rgba(255, 255, 255, 0.6);
  font-weight: $font-weight-bold;
}

// Input Wrapper
.input-wrapper {
  position: relative;
  background: var(--vscode-input-background);
  border: 2px solid var(--vscode-input-border);
  border-radius: $radius-md;
  transition: all $transition-normal $easing-default;
  width: 100%;
  min-width: 0;
  overflow: visible;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);

  &:focus-within {
    border-color: $brand-primary;
    box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.1),
      0 4px 12px rgba(0, 0, 0, 0.15);
    transform: translateY(-1px);
  }
}

.input-row {
  @include flex-center(row, $spacing-sm);
  justify-content: flex-start;
  padding: $spacing-sm;
  min-height: 40px;
  width: 100%;
  position: relative;

  @include respond-to("xs") {
    padding: $spacing-sm;
    min-height: 36px;
  }
}

#messageInput {
  flex: 1;
  border: none;
  background: transparent;
  color: var(--vscode-input-foreground);
  font-size: 13px;
  font-family: inherit;
  resize: none;
  outline: none;
  min-height: 20px;
  max-height: 120px;
  line-height: 1.5;
  width: 100%;
  overflow-y: auto;
  word-wrap: break-word;
  overflow-wrap: break-word;
  scrollbar-width: none;
  -ms-overflow-style: none;
  padding-left: 36px;

  &::-webkit-scrollbar {
    display: none;
  }

  &::placeholder {
    color: var(--vscode-input-placeholderForeground);
    opacity: 0.7;
    font-size: 13px;
  }

  @include respond-to("xs") {
    font-size: 12px;
    min-height: 18px;
    max-height: 100px;
    padding-left: 30px;
  }
}
